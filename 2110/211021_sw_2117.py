# N * N 크기 도시
# 마름모 모양의 영역에서만 서비스 제공
# 운영 비용 = K * K + (K - 1) * (K - 1)
# K = 1 -> 1, K = 2 -> 5, K = 3 -> 13, K = 4 -> 25
# 집은 M의 비용 지불
# 손해 보지 않는 한 최대한 많은 서비스 제공
# 이때 집들의 수 출력

dx = [0, 1, 0, -1]
dy = [1, 0, -1, 0]

def bfs(x, y):
    global result
    q = [(x, y, 1)]    
    k = 1
    count = 0
    visit = [[0] * N for _ in range(N)]
    visit[x][y] = 1

    if town[x][y] == 1:
        count += 1
    
    fee = 1
    cost = M * count
    profit = cost - fee
    if profit >= 0:
        result = max(result, count)

    while q:
        current = q.pop(0)        

        if current[2] != k:
            fee = cal(current[2])
            cost = M * count

            profit = cost - fee
            
            if profit >= 0:
                result = max(result, count)
            k = current[2]

        for i in range(4):
            nx = current[0] + dx[i]
            ny = current[1] + dy[i]

            if 0 <= nx < N and 0 <= ny < N and visit[nx][ny] == 0:
                visit[nx][ny] = 1
                if town[nx][ny] == 1:
                    count += 1
                q.append((nx, ny, current[2] + 1))

def cal(k):
    temp = k**2 + (k - 1)**2
    return temp
        
T = int(input())

for test_case in range(1, T + 1):
    N, M = map(int, input().split())
    town = [list(map(int, input().split())) for _ in range(N)]

    result = 0

    for i in range(N):
        for j in range(N):
            bfs(i, j)

    print('#{} {}'.format(test_case, result))

# 10
# 8 3
# 0 0 0 0 0 1 0 0
# 0 1 0 1 0 0 0 1
# 0 0 0 0 0 0 0 0
# 0 0 0 1 0 1 0 0
# 0 0 1 1 0 0 0 0
# 0 0 0 0 0 0 0 0
# 0 0 0 0 1 0 1 0
# 1 0 0 0 0 0 0 0
# 7 7
# 0 0 0 1 0 0 0
# 0 0 0 0 0 0 0
# 0 0 0 0 0 0 0
# 1 0 0 0 0 0 1
# 0 0 0 0 0 0 0
# 0 0 0 0 0 0 0
# 0 0 0 1 0 0 0
# 10 5
# 0 0 0 0 0 0 0 0 0 0
# 0 0 1 0 0 0 0 0 1 1
# 0 0 0 0 0 1 0 0 1 0
# 0 0 0 0 0 1 1 0 0 0
# 0 1 0 0 0 0 0 0 0 1
# 1 0 0 1 1 1 0 0 0 0
# 0 1 0 1 0 1 0 0 0 1
# 0 0 0 0 0 0 1 0 0 1
# 0 0 1 1 0 0 0 0 0 0
# 0 0 0 1 0 0 1 1 0 0
# 15 4
# 0 0 0 1 0 0 0 0 0 0 0 0 0 1 1
# 1 0 0 0 0 1 0 0 0 1 0 0 0 0 0
# 1 0 1 1 0 1 0 0 1 0 0 0 0 0 1
# 0 0 1 0 1 0 0 0 0 1 0 0 0 0 0
# 0 0 0 0 0 1 1 1 0 0 0 0 0 0 0
# 0 1 1 0 0 0 0 0 0 0 1 1 0 1 0
# 0 0 0 0 0 1 0 1 0 0 1 1 1 1 1
# 0 0 1 0 0 0 0 0 0 0 0 0 0 0 1
# 0 0 0 0 0 0 0 1 0 0 1 0 1 1 0
# 0 1 0 0 0 1 0 1 1 0 0 0 0 0 0
# 1 1 1 0 0 0 0 0 1 0 0 0 0 1 0
# 1 0 1 0 0 1 0 1 0 0 1 0 0 0 0
# 0 0 0 0 0 0 1 1 1 0 1 0 0 0 0
# 0 0 0 0 0 0 1 0 0 0 1 0 0 1 1
# 0 0 0 0 1 0 0 0 0 0 0 1 0 0 0
# 15 3
# 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0
# 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0
# 1 0 0 0 0 0 1 0 0 0 0 0 1 0 0
# 0 0 0 0 1 0 0 0 0 1 1 0 0 0 1
# 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0
# 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1
# 0 0 1 0 0 0 0 0 1 0 1 0 0 0 0
# 0 0 0 0 1 0 0 0 0 1 0 0 0 0 0
# 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0
# 1 0 0 0 0 0 1 0 1 0 0 0 0 0 0
# 0 1 0 0 0 0 1 0 0 0 1 0 0 1 0
# 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0
# 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0
# 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
# 0 0 0 0 0 0 1 0 0 0 1 0 1 0 0
# 15 8
# 0 0 1 0 0 0 0 0 0 0 0 0 0 0 1
# 0 0 0 0 0 1 0 0 0 0 0 0 0 1 1
# 0 0 0 0 1 0 0 0 1 1 1 0 1 0 0
# 1 1 0 0 0 1 0 1 0 0 0 0 1 0 0
# 0 1 0 0 1 0 1 0 1 0 0 0 0 1 1
# 0 0 0 0 0 0 0 1 0 0 0 1 0 0 0
# 1 0 0 0 1 0 0 0 1 0 1 0 1 0 1
# 1 1 1 0 0 0 0 0 1 0 0 0 0 1 0
# 1 1 0 0 0 0 0 0 1 0 1 0 1 0 0
# 1 1 0 0 1 0 1 0 0 0 0 0 0 1 0
# 0 0 0 0 0 0 0 0 1 0 0 1 1 0 1
# 0 0 0 0 1 0 0 0 1 0 0 0 0 0 0
# 0 1 0 0 1 1 0 0 0 0 0 0 0 0 1
# 1 0 0 0 0 0 0 1 1 1 0 0 0 1 1
# 1 0 0 0 0 1 0 0 0 0 0 1 0 1 1
# 15 2
# 1 0 1 1 0 1 1 1 0 1 0 0 0 0 0
# 1 0 0 1 0 0 0 0 1 0 0 0 1 0 0
# 0 0 0 0 0 0 0 0 1 1 1 1 0 0 0
# 1 0 0 0 0 0 0 0 0 0 0 1 0 1 1
# 1 1 1 1 1 1 1 0 0 1 0 0 1 1 0
# 0 1 0 1 0 0 0 0 0 1 1 0 1 1 0
# 1 0 0 1 1 1 0 0 1 0 0 0 0 1 1
# 0 1 1 1 1 1 0 1 0 1 0 0 0 0 1
# 0 0 1 1 0 0 0 0 0 0 0 0 1 1 1
# 0 1 1 1 0 0 0 1 1 0 0 1 0 0 1
# 0 0 1 0 0 1 1 0 1 0 0 0 1 0 0
# 1 1 1 1 1 0 0 1 1 0 1 1 1 1 1
# 1 1 0 0 0 0 0 1 0 0 0 0 0 1 0
# 1 1 0 1 0 0 0 0 0 1 0 0 0 0 1
# 0 1 0 0 0 0 1 0 0 1 0 1 0 0 0
# 20 4
# 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
# 0 0 0 0 1 1 0 0 1 0 0 0 1 0 0 0 1 0 0 0
# 1 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0
# 0 0 0 0 0 0 1 0 0 0 0 1 0 0 0 0 0 0 0 0
# 0 0 0 1 1 0 0 0 1 0 0 0 0 0 1 0 0 1 1 1
# 0 0 0 0 0 0 0 1 0 0 0 0 0 1 1 0 0 0 0 1
# 0 0 0 0 0 1 1 0 0 1 0 1 0 0 0 0 0 0 0 0
# 0 0 1 0 0 0 0 0 1 0 0 0 0 0 0 1 0 0 0 1
# 0 1 0 0 0 1 0 1 1 1 0 0 0 0 0 0 0 0 1 0
# 0 0 0 0 0 0 0 0 1 0 0 0 0 0 1 0 0 0 1 0
# 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0
# 1 0 0 1 0 0 1 0 0 1 0 0 0 0 0 0 0 0 0 1
# 0 0 0 1 0 0 1 0 0 0 0 1 0 0 0 0 0 0 0 0
# 0 0 1 0 0 0 0 1 0 0 0 0 1 0 1 0 0 1 0 0
# 0 0 0 0 1 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0
# 0 0 0 1 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0
# 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 1 0 0
# 0 0 0 1 0 0 1 0 0 0 0 0 0 0 1 0 1 1 0 0
# 0 0 1 0 1 0 0 0 0 1 1 1 0 0 0 0 0 1 0 0
# 0 0 0 0 0 0 0 0 0 0 1 1 0 0 0 0 1 0 0 0
# 20 10
# 0 0 0 0 1 0 0 1 0 0 0 0 0 0 0 1 0 1 0 1
# 0 0 0 0 0 1 0 0 0 0 0 0 1 0 0 0 0 0 0 0
# 0 0 0 1 0 0 1 0 0 1 0 0 0 1 0 0 0 0 1 0
# 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 0 0
# 1 0 1 0 0 0 0 0 0 0 0 0 1 0 1 0 0 0 0 0
# 0 0 0 0 0 0 1 1 1 0 0 1 1 0 0 0 1 0 0 0
# 0 0 0 0 1 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0
# 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
# 0 1 0 0 0 0 0 0 1 0 1 0 0 0 0 1 0 0 0 0
# 1 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0
# 0 0 0 0 0 0 0 1 0 0 0 0 1 0 0 1 0 1 1 0
# 0 1 0 0 0 1 0 1 0 1 0 0 0 0 0 0 0 1 0 0
# 0 0 0 0 1 0 0 0 0 0 1 0 0 0 0 0 1 0 0 0
# 1 0 0 0 0 0 0 0 0 0 0 0 1 1 0 0 0 0 0 0
# 0 0 0 0 1 0 0 0 0 1 0 0 0 0 1 0 0 0 0 0
# 0 0 1 0 0 0 0 0 1 1 1 0 0 1 0 0 0 0 0 0
# 0 0 0 0 0 0 1 0 1 0 1 0 1 0 0 0 0 0 0 0
# 0 0 1 0 1 1 1 1 1 1 0 0 0 1 0 0 0 1 0 1
# 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 1 0 0 0
# 0 1 0 0 1 0 0 1 0 0 0 0 1 0 0 0 0 1 0 0
# 20 3
# 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1
# 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1
# 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1
# 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1
# 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1
# 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1
# 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1
# 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1
# 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1
# 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1
# 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1
# 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1
# 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1
# 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1
# 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1
# 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1
# 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1
# 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1
# 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1
# 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1